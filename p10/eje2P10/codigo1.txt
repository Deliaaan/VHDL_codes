----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    13:40:52 01/02/2025 
-- Design Name: 
-- Module Name:    decoder4bits - deco 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

	entity decoder4bits is
		 Port (
			  D : in STD_LOGIC_VECTOR (0 to 3); 		  -- Entrada de 4 bits
			  E : in STD_LOGIC_VECTOR (0 to 1); 		  -- SelecciÃ³n de 2 bits
			  SEG1 : out STD_LOGIC_VECTOR (0 to 6);	  -- Salida de SEGMENTOS 1
			  SEG2 : out STD_LOGIC_VECTOR (0 to 6); 	  -- Salida de SEGMENTOS 2
			  DISPLAY : out STD_LOGIC_VECTOR (0 to 3);  -- salida de DISPLAY
			  A : out STD_LOGIC_VECTOR (0 to 7)			  -- Salida de LEDS
		 );
	end decoder4bits;

	architecture deco of decoder4bits is

	begin
	process(E, D)
		 begin	
				if E = "00" then
				-- codigo gray
					case D is
						when "0000" => A <= "00000000"; -- 0
						when "0001" => A <= "00000001"; -- 1
						when "0010" => A <= "00000011"; -- 2
						when "0011" => A <= "00000010"; -- 3
						when "0100" => A <= "00000110"; -- 4
						when "0101" => A <= "00000111"; -- 5
						when "0110" => A <= "00000101"; -- 6
						when "0111" => A <= "00000100"; -- 7
						when "1000" => A <= "00001100"; -- 8
						when "1001" => A <= "00001101"; -- 9
						when "1010" => A <= "00001111"; -- 10
						when "1011" => A <= "00001110"; -- 11
						when "1100" => A <= "00001010"; -- 12
						when "1101" => A <= "00001011"; -- 13
						when "1110" => A <= "00001001"; -- 14
						when "1111" => A <= "00001000"; -- 15
						when others => A <= "00000000";
					end case;						 
				elsif E = "01" then 
				-- ex3
					case D is
						when "0000" => A <= "00000011"; -- 0
						when "0001" => A <= "00000100"; -- 1
						when "0010" => A <= "00000101"; -- 2
						when "0011" => A <= "00000110"; -- 3
						when "0100" => A <= "00000111"; -- 4
						when "0101" => A <= "00001000"; -- 5
						when "0110" => A <= "00001001"; -- 6
						when "0111" => A <= "00001010"; -- 7
						when "1000" => A <= "00001011"; -- 8
						when "1001" => A <= "00001100"; -- 9
						when "1010" => A <= "01000011"; -- 10
						when "1011" => A <= "01000100"; -- 11
						when "1100" => A <= "01000101"; -- 12
						when "1101" => A <= "01000110"; -- 13
						when "1110" => A <= "01000111"; -- 14
						when "1111" => A <= "01001000"; -- 15
						when others => A <= "00000000";
					end case;
				elsif E = "10" then 
				-- BCD debe usar solo un display siendo asi el "1110"
				
				DISPLAY <= "1110"; -- Activar el primer display
					case D is
						when "0000" => SEG1 <= "0000001"; -- 0
						when "0001" => SEG1 <= "1001111"; -- 1
						when "0010" => SEG1 <= "0010010"; -- 2
						when "0011" => SEG1 <= "0000110"; -- 3
						when "0100" => SEG1 <= "1001100"; -- 4
						when "0101" => SEG1 <= "0100100"; -- 5
						when "0110" => SEG1 <= "0100000"; -- 6
						when "0111" => SEG1 <= "0001111"; -- 7
						when "1000" => SEG1 <= "0000000"; -- 8
						when "1001" => SEG1 <= "0000100"; -- 9
						when others => SEG1 <= "1111111";
					end case;
				else
                    -- Binario a Octal debe usar dos displays 
                    case D is
                        when "0000" => SEG1 <= "0000001"; SEG2 <= "1111111"; -- 0
                        when "0001" => SEG1 <= "1001111"; SEG2 <= "1111111"; -- 1
                        when "0010" => SEG1 <= "0010010"; SEG2 <= "1111111"; -- 2
                        when "0011" => SEG1 <= "0000110"; SEG2 <= "1111111"; -- 3
                        when "0100" => SEG1 <= "1001100"; SEG2 <= "1111111"; -- 4
                        when "0101" => SEG1 <= "0100100"; SEG2 <= "1111111"; -- 5
                        when "0110" => SEG1 <= "0100000"; SEG2 <= "1111111"; -- 6
                        when "0111" => SEG1 <= "0001111"; SEG2 <= "1111111"; -- 7
                        when "1000" => SEG1 <= "0000000"; SEG2 <= "1001111"; -- 10
                        when "1001" => SEG1 <= "0000100"; SEG2 <= "1001111"; -- 11
                        when "1010" => SEG1 <= "0100001"; SEG2 <= "0010010"; -- 12
                        when "1011" => SEG1 <= "0100010"; SEG2 <= "0000110"; -- 13
                        when "1100" => SEG1 <= "0100001"; SEG2 <= "1001100"; -- 14
                        when "1101" => SEG1 <= "0100110"; SEG2 <= "0100100"; -- 15
                        when "1110" => SEG1 <= "0100111"; SEG2 <= "0100000"; -- 16
                        when "1111" => SEG1 <= "0101000"; SEG2 <= "0001111"; -- 17
                        when others => SEG1 <= "1111111"; SEG2 <= "1111111"; -- Valor apagado
                    end case;

                    -- Configurar los displays
                    DISPLAY <= "1100"; -- Activar ambos displays
				end if;
		end process;
	end deco;

